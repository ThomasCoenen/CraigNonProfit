{"version":3,"sources":["images/curebutton.png","images/productimg1.jpg","images/productimg2.jpg","data.js","data2.js","FramedPrint.js","AboutPage.js","Homescreen.js","GalleryScreen.js","components/Contact.js","App.js","reportWebVitals.js","index.js"],"names":["data","products","_id","name","category","image","productimg1","price","description","productimg2","FramedPrint","makePayment","token","product","body","fetch","method","headers","JSON","stringify","then","response","console","log","status","catch","error","class","id","className","to","map","src","alt","stripeKey","process","amount","shippingAddress","billingAddress","AboutPage","Homescreen","i","GalleryScreen","Contact","useState","setName","email","setEmail","message","setMessage","setStatus","handleSubmit","e","a","preventDefault","target","elements","details","value","json","result","alert","onSubmit","htmlFor","type","required","placeholder","onChange","rows","cols","App","productBy","curebuttonImg","path","href","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.789e2233.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/curebutton.aa89fe5a.png\";","export default __webpack_public_path__ + \"static/media/productimg1.4d985f4a.jpg\";","export default __webpack_public_path__ + \"static/media/productimg2.34b68966.jpg\";","// import bcrypt from 'bcryptjs';\nimport productimg1 from './images/productimg1.jpg';\nimport productimg2 from './images/productimg2.jpg';\n\n\n\n//load data from a JS object instead of hard coding it\n//product data\n\nconst data = {\n    //add sample user to data.js\n    products: [\n        {\n            _id: '1',\n            name: 'BRONZE LEVEL PARTNER FRAMED PRINT',\n            category: 'Shirts',\n            image: productimg1,\n            price: 750,\n            description: 'high quality product'\n        },\n        {\n            _id: '2',\n            name: 'GOLD LEVEL PARTNER FRAMED PRINT',\n            category: 'Shirts',\n            image: productimg2,\n            price: 1000,\n            description: 'high quality product'\n        },\n        {\n            _id: '3',\n            name: 'SILVER LEVEL PARTNER FRAMED PRINT',\n            category: 'Shirts',\n            image: productimg1,\n            price: 800,\n            description: 'high quality product'\n        },\n        {\n            _id: '4',\n            name: 'PLATINUM LEVEL PARTNER FRAMED PRINT',\n            category: 'Shirts',\n            image: productimg2,\n            price: 500,\n            description: 'high quality product'\n        },\n    ]\n}\n\nexport default data;","// import bcrypt from 'bcryptjs';\n// import productimg1 from './images/productimg1.jpg';\nimport productimg2 from './images/productimg2.jpg';\n\n//load data from a JS object instead of hard coding it\n//product data\n\nconst data = {\n    //add sample user to data.js\n    products: [\n        {\n            _id: '1',\n            name: 'BRONZE LEVEL PARTNER FRAMED PRINT',\n            category: 'Shirts',\n            image: productimg2,\n            price: 750,\n            description: 'high quality product'\n        },\n        {\n            _id: '2',\n            name: 'GOLD LEVEL PARTNER FRAMED PRINT',\n            category: 'Shirts',\n            image: productimg2,\n            price: 1000,\n            description: 'high quality product'\n        },\n        {\n            _id: '3',\n            name: 'SILVER LEVEL PARTNER FRAMED PRINT',\n            category: 'Shirts',\n            image: productimg2,\n            price: 800,\n            description: 'high quality product'\n        },\n        {\n            _id: '4',\n            name: 'PLATINUM LEVEL PARTNER FRAMED PRINT',\n            category: 'Shirts',\n            image: productimg2,\n            price: 500,\n            description: 'high quality product'\n        },\n    ]\n}\n\nexport default data;","import React from 'react';\nimport StripeCheckout from \"react-stripe-checkout\"\n// import curebuttonImg from './images/curebutton.png';\n// import productImg from './images/productimg1.png';\n// import productImg1 from './images/productimg2.png';\nimport { Link } from 'react-router-dom';\n// import data from './data.js'\n// import AboutPage from './AboutPage';\n// import Homescreen from './Homescreen';\n// import framedCanvas from './framedCanvas';\nimport './App.css';\nimport data from './data2.js'\n\n\nexport default function FramedPrint() {\n\n  let token;\n  let product;\n\n  //token automatically created for u\n  const makePayment = (token, product) => {\n    const body = {\n      token,\n      product\n    }\n    const headers = {\n      \"Content-Type\": \"application/json\"\n    }\n    //fire up request to backend. can also use Axios to do this. \n    //MAKE SURE IF HOSTING ON AN REAL SERVER USE HTTPS\n    return fetch(`http://localhost:3000/payment`, {\n      method: \"POST\",\n      headers: headers,\n      body: JSON.stringify(body)\n    })\n    //success part\n    .then(response => { //lets see what the response looks like\n      console.log(\"RESPONSE: \", response)\n      const {status} = response; //destructure status from response\n      console.log(\"STATUS: \", status);\n    })\n    .catch(error => console.log(error));\n  }\n\n    return (\n\n\n        <div class=\"content\">\n\n        <section id=\"welcome\">\n          <h3 className=\"saying\">HELP US HEAL AND CURE MORE CHILDREN EVERY DAY!</h3>\n          <p className=\"saying\">HIGH QULAITY DUAL PANEL FRAMED ART COMMENMORATIVES</p>\n        </section>\n\n        <section id=\"projects\">\n\n          <div id=\"mainbuttons\">\n              {/* <button className=\"artbuttons\" href=\"\">FRAMED CANVAS OPTIONS</button> */}\n              {/* <button className=\"artbuttons\" href=\"\">FRAMED PRINT OPTIONS</button> */}\n\n              <Link to=\"/framedcanvas\">\n                <button className=\"artbuttons\">FRAMED CANVAS OPTIONS</button>\n              </Link>\n              <Link to=\"/framedprint\">\n                <button className=\"artbuttons\">FRAMED PRINT OPTIONS</button>\n              </Link>\n\n\n          </div>\n\n\n          <div class=\"project-grid\">\n                { \n                  data.products.map((product) => (\n                    <>\n                        <div key={product._id} className=\"product\">\n                          <img className=\"image_prod\" src={product.image} alt={product.name}/>\n                          <div className=\"itemstuff\">\n                            <h1 className=\"itemname\">{product.name}</h1>\n                            <p className=\"description\">Features:<br/>Beautiful Champagne Siler Finish<br/>Triple Matted w/ Float Spacer<br/>Tru Vue Glass<br/>High Quality engraved CURE Gold Partner<br/>Commenmorative plate<br/>Great Silent CURE Witness<br/><br/>\"REDEEMED\"<br/>CURE Commenmorative (White Version)<br/>20\"x32\" Outside Dimension<br/>With ${product.price} Donation</p>\n                            <StripeCheckout\n                              stripeKey={process.env.REACT_APP_KEY}\n                              token={makePayment(product)}\n                              name=\"Click to Donate\"\n                              amount={product.price * 100}\n                              shippingAddress\n                              billingAddress\n                            >\n                              <button className=\"donate\">CLICK TO DONATE ${product.price}</button>\n                            </StripeCheckout>\n                          </div>\n                        </div>  \n                      <br/>\n                    </>            \n                  ))\n                }\n          </div>\n\n\n          \n\n        </section>\n\n    </div>\n    )\n}\n","import React from 'react'\n// import { BrowserRouter, Link, Route } from 'react-router-dom';\nimport './App.css';\n\n\nexport default function AboutPage() {\n    return (\n        <div>\n            <h1>About</h1>\n            \n        </div>\n    )\n}\n","import './App.css';\nimport React, {useState} from 'react';\nimport StripeCheckout from \"react-stripe-checkout\"\n// import curebuttonImg from './images/curebutton.png';\n// import productImg from './images/productimg1.png';\nimport { Link} from 'react-router-dom';\nimport data from './data.js'\n// import FramedPrint from './FramedPrint';\n// import AboutPage from './AboutPage';\n// import FramedCanvas from './FramedCanvas';\n\n\n\n\nexport default function Homescreen() {\n\n// const [product, setProduct] = useState({\n//   name: \"React from FB\",\n//   price: 10, //10$\n//   productBy: \"facebook\",\n\n//   // _id: data.products[i]._id,\n//   // name: 'BRONZE LEVEL PARTNER FRAMED PRINT',\n//   // category: 'Shirts',\n//   // // image: productimg1,\n//   // price: 750,\n//   // description: 'high quality product'\n// });\n\nlet token;\nlet product;\n\n//token automatically created for u\nconst makePayment = (token, product) => {\n  const body = {\n    token,\n    product\n  }\n  // alert(product)\n  const headers = {\n    \"Content-Type\": \"application/json\"\n  }\n  //fire up request to backend. can also use Axios to do this. \n  //MAKE SURE IF HOSTING ON AN REAL SERVER USE HTTPS\n  return fetch(`http://localhost:3000/payment`, {\n    method: \"POST\",\n    headers: headers,\n    body: JSON.stringify(body)\n  })\n  //success part\n  .then(response => { //lets see what the response looks like\n    console.log(\"RESPONSE: \", response)\n    const {status} = response; //destructure status from response\n    console.log(\"STATUS: \", status);\n  })\n  .catch(error => console.log(error));\n}\n\n\n\n    return (\n    \n    <div class=\"content\">\n      {/* {alert(data.products[1].name)} */}\n        <section id=\"welcome\">\n          <h3 className=\"saying\">HELP US HEAL AND CURE MORE CHILDREN EVERY DAY!</h3>\n          <p className=\"saying\">HIGH QULAITY DUAL PANEL FRAMED ART COMMENMORATIVES</p>\n        </section>\n\n        <section id=\"projects\">\n\n          <div id=\"mainbuttons\">\n              {/* <button className=\"artbuttons\" href=\"\">FRAMED CANVAS OPTIONS</button> */}\n              {/* <button className=\"artbuttons\" href=\"\">FRAMED PRINT OPTIONS</button> */}\n\n              <Link to=\"/framedcanvas\">\n                <button className=\"artbuttons\">FRAMED CANVAS OPTIONS</button>\n              </Link>\n              <Link to=\"/framedprint\">\n                <button className=\"artbuttons\">FRAMED PRINT OPTIONS</button>\n              </Link>\n\n\n          </div>\n\n          <div class=\"project-grid\">\n                    \n            {/* <div className=\"product\"> */}\n                {\n                  data.products.map((product, i) => (\n                    <>\n                        <div key={product._id} className=\"product\">\n                          <img className=\"image_prod\" src={product.image} alt={product.name}/>\n                          <div className=\"itemstuff\">\n                            <h1 className=\"itemname\">{product.name}</h1>\n                            <p className=\"description\">Features:<br/>Beautiful Champagne Siler Finish<br/>Triple Matted w/ Float Spacer<br/>Tru Vue Glass<br/>High Quality engraved CURE Gold Partner<br/>Commenmorative plate<br/>Great Silent CURE Witness<br/><br/>\"REDEEMED\"<br/>CURE Commenmorative (White Version)<br/>20\"x32\" Outside Dimension<br/>With ${product.price} Donation</p>\n                            <StripeCheckout\n                              stripeKey={process.env.REACT_APP_KEY}\n                              // token={makePayment}\n                              token={makePayment(token, product)}\n                              name=\"Click to Donate\"\n                              amount={product.price * 100}\n                              shippingAddress\n                              billingAddress\n                            >\n                              <button className=\"donate\">CLICK TO DONATE ${product.price}</button>\n                            </StripeCheckout>\n                          </div>\n                        </div>  \n                      <br/>\n                    </>            \n                  ))\n                }\n                \n              {/* </div> */}\n\n          </div>\n\n        </section>\n\n    </div>\n    )\n}\n","import React from 'react'\n\nexport default function GalleryScreen() {\n    return (\n        <h1>gallery</h1>\n    )\n}\n","//https://w3collective.com/react-contact-form/\nimport React, { useState } from \"react\";\n\nconst Contact = () => {\n\n    const [name, setName] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [message, setMessage] = useState(\"\");\n    const [status, setStatus] = useState(\"Submit\");\n\n    const handleSubmit = async (e) => {\n    e.preventDefault();\n    setStatus(\"Sending...\");\n    const { name, email, message } = e.target.elements;\n    let details = {\n        name: name.value,\n        email: email.value,\n        message: message.value,\n    };\n    let response = await fetch(\"http://localhost:3000/contact\", {\n        method: \"POST\",\n        headers: {\n        \"Content-Type\": \"application/json;charset=utf-8\",\n        },\n        body: JSON.stringify(details),\n    });\n    setStatus(\"Submit\");\n    let result = await response.json();\n    setName(\"\");\n    setEmail(\"\");\n    setMessage(\"\");\n    alert(result.status);\n    };\n\n    return (\n        // <div class=\"formbox\">\n        <form className=\"form\" onSubmit={handleSubmit}>\n            <h1>Contact Us</h1>\n            <div className=\"singlebox\">\n                <label htmlFor=\"name\">Name:</label>\n                <input \n                    type=\"text\" \n                    id=\"name\" \n                    required \n                    placeholder=\"name\"\n                    value={name}\n                    onChange={(e) => setName(e.target.value)}\n                />\n            </div>\n            <div className=\"singlebox\">\n                <label htmlFor=\"email\">Email:</label>\n                <input \n                    type=\"email\" \n                    id=\"email\" \n                    required \n                    placeholder=\"Email\"\n                    value={email}\n                    onChange={(e) => setEmail(e.target.value)}\n                />\n            </div>\n            <div className=\"singlebox\">\n                <label htmlFor=\"message\">Message:</label>\n                <textarea \n                    id=\"message\" \n                    rows=\"8\" \n                    cols=\"35\" \n                    required \n                    placeholder=\"Message\"\n                    value={message}\n                    onChange={(e) => setMessage(e.target.value)}\n                />\n            </div>\n            <button className=\"submitcontactbutton\" type=\"submit\">{status}</button>\n        </form>\n        // </div>\n    );\n};\n\nexport default Contact;","//ReactStripeCheckout - only component u need to configure stripe on frontend\n//npm install react-stripe-checkout\n\n//create .ENV file in frontend ROOT\n//React comes w/ DOTENV pckg so dont need to install it\n//Place PublishableKey in front end. Secret Key goes in Backend\n\n\nimport './App.css';\nimport React, {useState} from 'react';\nimport StripeCheckout from \"react-stripe-checkout\"\nimport curebuttonImg from './images/curebutton.png';\n// import productImg from './images/productimg1.png';\nimport { BrowserRouter, Link, Route, Switch} from 'react-router-dom';\nimport data from './data.js'\nimport FramedPrint from './FramedPrint';\nimport AboutPage from './AboutPage';\nimport Homescreen from './Homescreen';\n// import FramedCanvas from './FramedCanvas';\nimport GalleryScreen from './GalleryScreen';\n// import ContactScreen from './ContactScreen';\n// import ContactForm from './contact'\nimport Contact from './components/Contact';\n\n\n\n//pckg.json:\n// \"proxy\": \"http://localhost:3000\",\n\n\nfunction App() {\n\n  const [product, setProduct] = useState({\n    name: \"React from FB\",\n    price: 10, //10$\n    productBy: \"facebook\"\n  });\n\n  //token automatically created for u\n  const makePayment = token => {\n\n    const body = {\n      token,\n      product\n    }\n    const headers = {\n      \"Content-Type\": \"application/json\"\n    }\n    //fire up request to backend. can also use Axios to do this. \n    //MAKE SURE IF HOSTING ON AN REAL SERVER USE HTTPS\n    return fetch(`http://localhost:3000/payment`, {\n      method: \"POST\",\n      headers: headers,\n      body: JSON.stringify(body)\n    })\n    //success part\n    .then(response => { //lets see what the response looks like\n      console.log(\"RESPONSE: \", response)\n      const {status} = response; //destructure status from response\n      console.log(\"STATUS: \", status);\n    })\n    .catch(error => console.log(error));\n  }\n\n  return (\n  <BrowserRouter>\n    <div class=\"container\">\n\n      <header class=\"header\" id=\"myHeader\">\n\n        <ul class=\"list\">\n            {/* <li><img className=\"cureimg\" src=\"/images/curebutton.png\" alt=\"\"></img></li> */}\n            <li><img className=\"cureimg\" src={curebuttonImg} alt=\"\"></img></li>\n\n        </ul>\n\n        <ul class=\"links\">\n            <li className=\"try\"><Link className=\"home\" to=\"/\">Home</Link></li>\n            <li className=\"try\"><Link className=\"home\"  to=\"/about\">About</Link></li>\n            <li className=\"try\"><Link className=\"home\"  to=\"/gallery\">Gallery</Link></li>\n            <li className=\"try\"><Link className=\"home\"  to=\"/contact\">Contact</Link></li>\n            {/* <Link className=\"brand\" to=\"/about\">amazona</Link> */}\n\n            {/* <li><a className=\"home\" href=\"/\">Home</a></li> */}\n            {/* <li><a className=\"home\" href=\"index.html\">About</a></li> */}\n        </ul>\n      </header>\n\n      {/* must pass publishablekey, token, name(not necesssary). Token responsible \n      for firing up some things. Fires up a method   */}\n      {/* <StripeCheckout \n        stripeKey={process.env.REACT_APP_KEY}\n        token={makePayment}\n        name=\"Click to Donate\"\n        amount={product.price * 100}\n        shippingAddress\n        billingAddress>\n        <button className=\"donate\">Click to Donate ${product.price}</button>\n      </StripeCheckout> */}\n\n        <Switch>\n          <Route path=\"/about\">\n            <AboutPage />\n          </Route>\n          <Route path=\"/framedprint\">\n            <FramedPrint />\n          </Route>\n          <Route path=\"/framedcanvas\">\n            <Homescreen />\n          </Route>\n          <Route path=\"/gallery\">\n            <GalleryScreen />\n          </Route>\n          <Route path=\"/contact\">\n            <Contact />\n          </Route>\n          <Route path=\"/\">\n            <Homescreen />\n          </Route>\n        </Switch>\n\n        <section id=\"contact\">\n          <ul id=\"connect-links\">\n            <li><a className=\"connect\" href=\"http://www.craigpaulstudio.com/\">CraigPaulStudio</a>\n            </li>\n\n            <li><a className=\"connect\"  href=\"asdf\">LinkedIn</a></li>\n            <li><a className=\"connect\"  href=\"afs.com\">Email Me</a></li>\n          </ul>\n\n        </section>\n\n        <footer>\n          <h3>Website Design by Craigpaulstudio.com</h3>\n        </footer>\n\n    </div>\n\n  </BrowserRouter>\n  );\n}\n\nexport default App;\n\n\n\n// git add .\n//git commit -m \"fixxxxxed\"\n//npm run deploy\n//git push -u origin master\n\n\n\n\n\n// \"description\": \"This project was bootstrapped with [Create React App](https://github.com/facebook/create-react-app).\",\n// \"main\": \"index.js\",\n// \"repository\": {\n//   \"type\": \"git\",\n//   \"url\": \"git+https://github.com/ThomasCoenen/Craigssite-.git\"\n// },\n// \"author\": \"\",\n// \"license\": \"ISC\",\n// \"bugs\": {\n//   \"url\": \"https://github.com/ThomasCoenen/Craigssite-/issues\"\n// }\n\n\n\n\n// html {\n//     /* margin: auto 0; */\n//     /* overflow: hidden; */\n//     background: url(images/backgroundimg.png) no-repeat center center fixed;\n//     /* background-image: url(\"images/backgroundimg.png\"); */\n//     /* background-repeat: no-repeat; Do not repeat the image */\n//     -webkit-background-size: cover;\n//     -moz-background-size: cover;\n//     -o-background-size: cover;\n//     background-size: cover; /* Resize the background image to cover the entire container\n//     /* background-attachment: fixed; */ \n//     background-repeat: no-repeat; \n//     font-size: 62.5%; \n//     /* box-sizing: border-box; */\n//   }\n  \n//   body {\n//     margin: 0;\n//     height: 100vh; /* set height to the full height */\n//     font-size: 1.6rem;\n//     font-family: Helvetica Arial, sans-serif;\n//     -webkit-font-smoothing: antialiased;\n//     -moz-osx-font-smoothing: grayscale;\n//   /* \n//     font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n//       'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n//       sans-serif; */\n//   }\n  \n//   /* code {\n//     font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',\n//       monospace;\n//   } */\n  \n//   /* add this line. use bc we have root id inside public/index.html */\n//   #root {\n//     height: 100%;\n//   }\n  \n//   .grid-container {\n//     display: grid;\n//     /* 3 sections here */\n//     /* grid-template-areas: \n//       'header'\n//       'main'\n//       'footer'; */\n//     /* define rows and columns */\n//     /* grid-template-columns: auto;\n//     grid-template-rows: auto; */\n//     height: 100%; \n//   }\n  \n//   /* Top header */\n  \n//   .topheader {\n//     display: grid;\n//     /* grid-template-columns: 50px 1fr; */\n//     grid-template-columns: auto auto;\n//     grid-template-rows: auto;\n//     /* grid-template-columns: auto;\n//     grid-template-rows: auto auto; */\n//     grid-gap: 500px;\n//     align-items: center;\n//     /* align-items: start; */\n//     /* justify-items: center; */\n//     height: 100px;\n//     background-color: rgb(0, 0, 0);\n//     opacity: 0.7;\n//     font-size: 22px;\n    \n//     /* text-decoration: none; */\n//     /* justify-items: end; */\n//   }\n  \n//   .cureimg {\n//     display: grid;\n//     justify-items: center;\n//     text-decoration: none;\n//     height: 100px;\n//     width: 375px;\n//   }\n  \n//   .navigation {\n//     display: grid;\n//     grid-template-columns: auto auto auto auto auto auto;\n//     justify-items: center;\n//     /* text-decoration: none; */\n//   }\n  \n//   .navigation a {\n//     text-decoration: none;\n//   }\n  \n//   /* .cureimg {\n//     height: 100px;\n//     width: 375px;\n//   } */\n  \n//   .center {\n//     display: grid;\n//     justify-items: center;\n//   }\n  \n//   /* Bottom header */\n  \n//   .bottomheader {\n//     display: grid;\n//     /* grid-gap: 50px; */\n//     margin-bottom: 50px;\n//     /* align-items: center; */\n//     justify-items: center;\n//   }\n  \n//   .options {\n//     display: grid;\n//     grid-template-columns: auto auto;\n//     grid-gap: 40px;\n//     justify-items: center;\n//   }\n  \n//   /* .buttonhome {\n//     height: 60px;\n//     width: 400px;\n//   } */\n  \n//   /* MAIN */\n  \n//   main {\n//     display: grid;\n//     grid-gap: 14px;\n//     /* justify-items: center; */\n//   }\n  \n//   .product{\n//     display: grid;\n//     grid-template-columns: auto auto;\n//     grid-gap: 30px;\n//   }\n  \n//   .image_prod {\n//     height: 500px;\n//     width: 500px;\n//   }\n  \n//   /* .donate {\n//     text-align: center;\n//     color: white;\n//     background-color: blue;\n//     height: 60px;\n//     width: 400px;\n//     font-size: 35px;\n//   } */\n  \n  \n//   /* Common */\n  \n//   button {\n//     text-align: center;\n//     border-radius: 0.5rem;\n//     padding: 0rem;\n//     /* margin: 5px; */\n//     color: white;\n//     background-color:blue;\n//     height: 60px;\n//     width: 400px;\n//     font-size: 27px;\n//     border: none;\n//   }\n  \n  \n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}